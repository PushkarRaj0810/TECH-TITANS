import "reflect-metadata";
import { DataSource } from "typeorm";
import { Issue } from "../models/Issue";
import { User } from "../models/User";
import { Flag } from "../models/Flag";
import { StatusLog } from "../models/StatusLog";

/**
 * AppDataSource is your app-wide TypeORM connection.
 * Use `synchronize: true` only in development (use migrations instead in production).
 *
 * DATABASE_URL should point to a PostGIS-enabled PostgreSQL instance.
 */
export const AppDataSource = new DataSource({
  type: "postgres",
  url: process.env.DATABASE_URL,
  entities: [Issue, User, Flag, StatusLog],
  synchronize: true,
  logging: process.env.NODE_ENV === "development",
});

export async function initializeDatabase(): Promise<void> {
  try {
    await AppDataSource.initialize();
    console.log("📦 Database initialized & entities registered.");
  } catch (error) {
    console.error("❌ Failed to initialize the database:", error);
    process.exit(1);
  }
}
import { initializeDatabase } from "./db";
import express from "express";

(async () => {
  await initializeDatabase();
  const app = express();
  // … your express/routes setup
  app.listen(process.env.PORT || 4000, () => console.log("✅ App is running"));
})();
